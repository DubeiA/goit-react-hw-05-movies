{"version":3,"file":"static/js/681.8804a5be.chunk.js","mappings":"uQAAA,IAAMA,EAAa,mCAENC,EAAmB,WAC9B,IAAMC,EAAc,IAAIC,gBAAgB,CACtCC,QAASJ,IAEX,OAAOK,MAAM,kDAAD,OAAmDH,IAC5DI,MAAK,SAACC,GAAD,OAASA,EAAIC,MAAb,IACLF,MAAK,SAACC,GAAD,OAASA,EAAIE,OAAb,GACT,EAEYC,EAAe,SAACC,GAC3B,IAAMT,EAAc,IAAIC,gBAAgB,CACtCC,QAASJ,IAEX,OAAOK,MAAM,sCAAD,OAAuCM,EAAvC,YAAkDT,EAAlD,oBACTI,MAAK,SAAAM,GACA,OAAIA,EAASC,GACJD,EAASJ,OAGXM,QAAQC,OACb,IAAIC,MAAJ,8CAGH,GAER,EAEYC,EAAkB,SAACC,GAC9B,IAAMhB,EAAc,IAAIC,gBAAgB,CACtCC,QAASJ,EACTkB,EAAAA,IAEF,OAAOb,MAAM,6CAAD,OAA8CH,EAA9C,4DAA6GgB,IACtHZ,MAAK,SAACC,GAAD,OAASA,EAAIC,MAAb,IACLF,MAAK,SAACC,GAAD,OAASA,EAAIE,OAAb,GACT,EAGYU,EAAc,SAACR,GAC1B,IAAMT,EAAc,IAAIC,gBAAgB,CACtCC,QAASJ,IAEX,OAAOK,MAAM,sCAAD,OAAuCM,EAAvC,oBAA0DT,EAA1D,oBACTI,MAAK,SAAAM,GACA,OAAIA,EAASC,GACJD,EAASJ,OAGXM,QAAQC,OACb,IAAIC,MAAJ,kCAGP,IACFV,MAAK,SAACC,GAAD,OAASA,EAAIa,IAAb,GAEP,EAEYC,EAAgB,SAACV,GAC5B,IAAMT,EAAc,IAAIC,gBAAgB,CACtCC,QAASJ,IAEX,OAAOK,MAAM,sCAAD,OAAuCM,EAAvC,oBAA0DT,EAA1D,2BACTI,MAAK,SAAAM,GACA,OAAIA,EAASC,GACJD,EAASJ,OAGXM,QAAQC,OACb,IAAIC,MAAJ,kCAGP,IACFV,MAAK,SAACC,GAAD,OAASA,EAAIE,OAAb,GAEP,C,mHC3ED,EAA4B,0BAA5B,EAA+D,uBAA/D,EAA6F,qBAA7F,EAAkI,8B,SC6BlI,EAzBgB,WACX,IAAQa,GAAYC,EAAAA,EAAAA,MAAZD,QACT,GAAsCE,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACMC,GAAWC,EAAAA,EAAAA,MAMnB,OALGC,EAAAA,EAAAA,YAAU,WAETC,EAAAA,GAAuBR,GAAShB,KAAKoB,EACxC,GAAE,CAACJ,KAGF,gBAAKS,UAAWC,EAAhB,SACOP,EAAYQ,OAAS,GAAK,0BACtBR,EAAYS,KAAI,SAACC,GAAD,OACrB,2BACM,cAAGJ,UAAWC,EAAd,SAA2BG,EAAOC,UAClC,eAAGL,UAAWC,EAAd,wBAAoCG,EAAOE,aAFvCF,EAAOG,GADI,KAMvB,SAAC,KAAD,CAAMC,MAAO,CAACC,KAAMb,SACX,gBAAKI,UAAWC,EAAhB,oDAIhB,C","sources":["Api/ApiMovie.jsx","webpack://react-homework-template/./src/pages/Reviews/Review.module.css?a953","pages/Reviews/Reviews.jsx"],"sourcesContent":["const API_KEY_V3 = \"e0ed1638ffdd17848c4367fe92782c7d\";\n\nexport const getTrendingFilms = () => {\n  const queryParams = new URLSearchParams({\n    api_key: API_KEY_V3,\n  });\n  return fetch(`https://api.themoviedb.org/3/trending/all/week?${queryParams}`)\n    .then((res) => res.json())\n    .then((res) => res.results);\n};\n\nexport const getFilmsById = (moveiID) => {\n  const queryParams = new URLSearchParams({\n    api_key: API_KEY_V3,\n  });\n  return fetch(`https://api.themoviedb.org/3/movie/${moveiID}?${queryParams}&language=en-US`)\n    .then(response => {\n          if (response.ok) {\n            return response.json()\n          }\n\n          return Promise.reject(\n            new Error(`We don't have information about this Movie`));\n            \n          \n        })\n    \n};\n\nexport const getFilmsByQuery = (q) => {\n  const queryParams = new URLSearchParams({\n    api_key: API_KEY_V3,\n    q,\n  }); \n  return fetch(`https://api.themoviedb.org/3/search/movie?${queryParams}&language=en-US&page=1&include_adult=false&query=${q}`)\n    .then((res) => res.json())\n    .then((res) => res.results);\n};\n\n\nexport const getCastFilm = (moveiID) => {\n  const queryParams = new URLSearchParams({\n    api_key: API_KEY_V3,\n  });\n  return fetch(`https://api.themoviedb.org/3/movie/${moveiID}/credits?${queryParams}&language=en-US`)\n    .then(response => {\n          if (response.ok) {\n            return response.json()\n          }\n\n          return Promise.reject(\n            new Error(`We don't have about this Movie`));\n            \n          \n    })\n  .then((res) => res.cast);\n    \n};\n\nexport const getReviewFilm = (moveiID) => {\n  const queryParams = new URLSearchParams({\n    api_key: API_KEY_V3,\n  });\n  return fetch(`https://api.themoviedb.org/3/movie/${moveiID}/reviews?${queryParams}&language=en-US&page=1`)\n    .then(response => {\n          if (response.ok) {\n            return response.json()\n          }\n\n          return Promise.reject(\n            new Error(`We don't have about this Movie`));\n            \n          \n    })\n  .then((res) => res.results);\n    \n};","// extracted by mini-css-extract-plugin\nexport default {\"contsiner\":\"Review_contsiner__8ekrg\",\"author\":\"Review_author__ms+C9\",\"text\":\"Review_text__kHvhy\",\"error_message\":\"Review_error_message__i3mCI\"};","import * as FilmsAPI from '../../Api/ApiMovie'\nimport { useState, useEffect } from \"react\";\nimport { useParams, useLocation, Link } from \"react-router-dom\";\nimport css from '../Reviews/Review.module.css'\n\nconst Reviews = () => {\n     const { movieId } = useParams();\n    const [reviewsFilm, setReviewsFilm] = useState([]);\n    const location = useLocation()\n     useEffect(() => {\n     \n      FilmsAPI.getReviewFilm(movieId).then(setReviewsFilm);\n  }, [movieId]);\n\n  return (\n    <div className={css.contsiner}>\n          {reviewsFilm.length > 0 ?  <ul>\n              {reviewsFilm.map((review) => (\n          <li  key={review.id}>\n                <p className={css.author}>{review.author}</p>\n                <p className={css.text}>Character: {review.content}</p>\n          </li>\n              ))}\n        <Link state={{from: location}}></Link>\n         </ul> : <div className={css.error_message}>We dont have any information about it</div>\n         }\n    </div>\n  );\n};\n\nexport default Reviews"],"names":["API_KEY_V3","getTrendingFilms","queryParams","URLSearchParams","api_key","fetch","then","res","json","results","getFilmsById","moveiID","response","ok","Promise","reject","Error","getFilmsByQuery","q","getCastFilm","cast","getReviewFilm","movieId","useParams","useState","reviewsFilm","setReviewsFilm","location","useLocation","useEffect","FilmsAPI","className","css","length","map","review","author","content","id","state","from"],"sourceRoot":""}