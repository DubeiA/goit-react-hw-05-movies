{"version":3,"file":"static/js/544.54c8d1b0.chunk.js","mappings":"uQAAA,IAAMA,EAAa,mCAENC,EAAmB,WAC9B,IAAMC,EAAc,IAAIC,gBAAgB,CACtCC,QAASJ,IAEX,OAAOK,MAAM,kDAAD,OAAmDH,IAC5DI,MAAK,SAACC,GAAD,OAASA,EAAIC,MAAb,IACLF,MAAK,SAACC,GAAD,OAASA,EAAIE,OAAb,GACT,EAEYC,EAAe,SAACC,GAC3B,IAAMT,EAAc,IAAIC,gBAAgB,CACtCC,QAASJ,IAEX,OAAOK,MAAM,sCAAD,OAAuCM,EAAvC,YAAkDT,EAAlD,oBACTI,MAAK,SAAAM,GACA,OAAIA,EAASC,GACJD,EAASJ,OAGXM,QAAQC,OACb,IAAIC,MAAJ,8CAGH,GAER,EAEYC,EAAkB,SAACC,GAC9B,IAAMhB,EAAc,IAAIC,gBAAgB,CACtCC,QAASJ,EACTkB,EAAAA,IAEF,OAAOb,MAAM,6CAAD,OAA8CH,EAA9C,4DAA6GgB,IACtHZ,MAAK,SAACC,GAAD,OAASA,EAAIC,MAAb,IACLF,MAAK,SAACC,GAAD,OAASA,EAAIE,OAAb,GACT,EAGYU,EAAc,SAACR,GAC1B,IAAMT,EAAc,IAAIC,gBAAgB,CACtCC,QAASJ,IAEX,OAAOK,MAAM,sCAAD,OAAuCM,EAAvC,oBAA0DT,EAA1D,oBACTI,MAAK,SAAAM,GACA,OAAIA,EAASC,GACJD,EAASJ,OAGXM,QAAQC,OACb,IAAIC,MAAJ,kCAGP,IACFV,MAAK,SAACC,GAAD,OAASA,EAAIa,IAAb,GAEP,EAEYC,EAAgB,SAACV,GAC5B,IAAMT,EAAc,IAAIC,gBAAgB,CACtCC,QAASJ,IAEX,OAAOK,MAAM,sCAAD,OAAuCM,EAAvC,oBAA0DT,EAA1D,2BACTI,MAAK,SAAAM,GACA,OAAIA,EAASC,GACJD,EAASJ,OAGXM,QAAQC,OACb,IAAIC,MAAJ,kCAGP,IACFV,MAAK,SAACC,GAAD,OAASA,EAAIE,OAAb,GAEP,C,+FC/CD,UAtBa,WACX,OAA0Ca,EAAAA,EAAAA,UAAS,IAAnD,eAAOC,EAAP,KAAsBC,EAAtB,KACMC,GAAWC,EAAAA,EAAAA,MAMjB,OAJAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,KAA4BtB,KAAKkB,EAClC,GAAE,KAGD,+BACE,eAAIK,UAAWC,EAAAA,EAAAA,eAAf,SACGP,EAAcQ,KAAI,SAACC,GAAD,OACjB,eAAIH,UAAWC,EAAAA,EAAAA,UAAf,UACE,UAAC,KAAD,CAAMD,UAAWC,EAAAA,EAAAA,UAAeG,GAAE,0CAAqCD,EAAaE,IAAMC,MAAO,CAACC,KAAMX,EAASY,UAAjH,WAA4H,gBAAKR,UAAYC,EAAAA,EAAAA,SAAcQ,MAAO,IAAKC,IAAG,yCAC1KP,EAAaQ,aAAeC,IAAKT,EAAaU,QAAUV,EAAaU,MADrE,IAC6EV,EAAaW,SAFxDX,EAAaE,GADhC,OAS1B,C,oBC1BD,KAAgB,eAAiB,6BAA6B,UAAY,wBAAwB,SAAW,uBAAuB,UAAY,wB","sources":["Api/ApiMovie.jsx","pages/Home/Home.jsx","webpack://react-homework-template/./src/pages/Home/Home.module.css?1370"],"sourcesContent":["const API_KEY_V3 = \"e0ed1638ffdd17848c4367fe92782c7d\";\n\nexport const getTrendingFilms = () => {\n  const queryParams = new URLSearchParams({\n    api_key: API_KEY_V3,\n  });\n  return fetch(`https://api.themoviedb.org/3/trending/all/week?${queryParams}`)\n    .then((res) => res.json())\n    .then((res) => res.results);\n};\n\nexport const getFilmsById = (moveiID) => {\n  const queryParams = new URLSearchParams({\n    api_key: API_KEY_V3,\n  });\n  return fetch(`https://api.themoviedb.org/3/movie/${moveiID}?${queryParams}&language=en-US`)\n    .then(response => {\n          if (response.ok) {\n            return response.json()\n          }\n\n          return Promise.reject(\n            new Error(`We don't have information about this Movie`));\n            \n          \n        })\n    \n};\n\nexport const getFilmsByQuery = (q) => {\n  const queryParams = new URLSearchParams({\n    api_key: API_KEY_V3,\n    q,\n  }); \n  return fetch(`https://api.themoviedb.org/3/search/movie?${queryParams}&language=en-US&page=1&include_adult=false&query=${q}`)\n    .then((res) => res.json())\n    .then((res) => res.results);\n};\n\n\nexport const getCastFilm = (moveiID) => {\n  const queryParams = new URLSearchParams({\n    api_key: API_KEY_V3,\n  });\n  return fetch(`https://api.themoviedb.org/3/movie/${moveiID}/credits?${queryParams}&language=en-US`)\n    .then(response => {\n          if (response.ok) {\n            return response.json()\n          }\n\n          return Promise.reject(\n            new Error(`We don't have about this Movie`));\n            \n          \n    })\n  .then((res) => res.cast);\n    \n};\n\nexport const getReviewFilm = (moveiID) => {\n  const queryParams = new URLSearchParams({\n    api_key: API_KEY_V3,\n  });\n  return fetch(`https://api.themoviedb.org/3/movie/${moveiID}/reviews?${queryParams}&language=en-US&page=1`)\n    .then(response => {\n          if (response.ok) {\n            return response.json()\n          }\n\n          return Promise.reject(\n            new Error(`We don't have about this Movie`));\n            \n          \n    })\n  .then((res) => res.results);\n    \n};","import { useEffect, useState } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport css from '../Home/Home.module.css'\n\n\nimport * as FilmsAPI from \"../../Api/ApiMovie\";\n\nconst Home = () => {\n  const [trendingFilms, setTrendingFilms] = useState([]);\n  const location = useLocation()\n\n  useEffect(() => {\n    FilmsAPI.getTrendingFilms().then(setTrendingFilms);\n  }, []);\n\n  return (\n    <>\n      <ul className={css.home_styled_ul }>\n        {trendingFilms.map((trendingFilm) => (\n          <li className={css.list_home } key={trendingFilm.id}>\n            <Link className={css.home_link} to={`/goit-react-hw-05-movies/movies/${trendingFilm.id}`} state={{from: location.pathname}}><img className={ css.home_img} width={420} src={`https://image.tmdb.org/t/p/w780${\n            trendingFilm.poster_path}`} alt={trendingFilm.title} />{trendingFilm.title} {trendingFilm.name}</Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default Home","// extracted by mini-css-extract-plugin\nexport default {\"home_styled_ul\":\"Home_home_styled_ul__zNaTm\",\"list_home\":\"Home_list_home__K041t\",\"home_img\":\"Home_home_img__inaBL\",\"home_link\":\"Home_home_link__CREjD\"};"],"names":["API_KEY_V3","getTrendingFilms","queryParams","URLSearchParams","api_key","fetch","then","res","json","results","getFilmsById","moveiID","response","ok","Promise","reject","Error","getFilmsByQuery","q","getCastFilm","cast","getReviewFilm","useState","trendingFilms","setTrendingFilms","location","useLocation","useEffect","FilmsAPI","className","css","map","trendingFilm","to","id","state","from","pathname","width","src","poster_path","alt","title","name"],"sourceRoot":""}