{"version":3,"file":"static/js/544.f0305a49.chunk.js","mappings":"uQAAA,IAAMA,EAAa,mCAENC,EAAmB,WAC9B,IAAMC,EAAc,IAAIC,gBAAgB,CACtCC,QAASJ,IAEX,OAAOK,MAAM,kDAAD,OAAmDH,IAC5DI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAR,IACRF,MAAK,SAAAC,GAAG,OAAIA,EAAIE,OAAR,GACZ,EAEYC,EAAe,SAAAC,GAC1B,IAAMT,EAAc,IAAIC,gBAAgB,CACtCC,QAASJ,IAEX,OAAOK,MAAM,sCAAD,OAC4BM,EAD5B,YACuCT,EADvC,oBAEVI,MAAK,SAAAM,GACL,OAAIA,EAASC,GACJD,EAASJ,OAGXM,QAAQC,OACb,IAAIC,MAAJ,8CAEH,GACF,EAEYC,EAAkB,SAAAC,GAC7B,IAAMhB,EAAc,IAAIC,gBAAgB,CACtCC,QAASJ,EACTkB,EAAAA,IAEF,OAAOb,MAAM,6CAAD,OACmCH,EADnC,4DACkGgB,IAE3GZ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAR,IACRF,MAAK,SAAAC,GAAG,OAAIA,EAAIE,OAAR,GACZ,EAEYU,EAAc,SAAAR,GACzB,IAAMT,EAAc,IAAIC,gBAAgB,CACtCC,QAASJ,IAEX,OAAOK,MAAM,sCAAD,OAC4BM,EAD5B,oBAC+CT,EAD/C,oBAGTI,MAAK,SAAAM,GACJ,OAAIA,EAASC,GACJD,EAASJ,OAGXM,QAAQC,OAAO,IAAIC,MAAJ,kCACvB,IACAV,MAAK,SAAAC,GAAG,OAAIA,EAAIa,IAAR,GACZ,EAEYC,EAAgB,SAAAV,GAC3B,IAAMT,EAAc,IAAIC,gBAAgB,CACtCC,QAASJ,IAEX,OAAOK,MAAM,sCAAD,OAC4BM,EAD5B,oBAC+CT,EAD/C,2BAGTI,MAAK,SAAAM,GACJ,OAAIA,EAASC,GACJD,EAASJ,OAGXM,QAAQC,OAAO,IAAIC,MAAJ,kCACvB,IACAV,MAAK,SAAAC,GAAG,OAAIA,EAAIE,OAAR,GACZ,C,+FCjCD,UAjCa,WACX,OAA0Ca,EAAAA,EAAAA,UAAS,IAAnD,eAAOC,EAAP,KAAsBC,EAAtB,KACMC,GAAWC,EAAAA,EAAAA,MAMjB,OAJAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,KAA4BtB,KAAKkB,EAClC,GAAE,KAGD,+BACE,eAAIK,UAAWC,EAAAA,EAAAA,eAAf,SACGP,EAAcQ,KAAI,SAAAC,GAAY,OAC7B,eAAIH,UAAWC,EAAAA,EAAAA,UAAf,UACE,UAAC,KAAD,CACED,UAAWC,EAAAA,EAAAA,UACXG,GAAE,kBAAaD,EAAaE,IAC5BC,MAAO,CAAEC,KAAMX,EAASY,UAH1B,WAKE,gBACER,UAAWC,EAAAA,EAAAA,SACXQ,MAAO,IACPC,IAAG,yCAAoCP,EAAaQ,aACpDC,IAAKT,EAAaU,QAEnBV,EAAaU,MAXhB,IAWwBV,EAAaW,SAZJX,EAAaE,GADnB,OAoBtC,C,oBCpCD,KAAgB,eAAiB,6BAA6B,UAAY,wBAAwB,SAAW,uBAAuB,UAAY,wB","sources":["Api/ApiMovie.jsx","pages/Home/Home.jsx","webpack://react-homework-template/./src/pages/Home/Home.module.css?1370"],"sourcesContent":["const API_KEY_V3 = 'e0ed1638ffdd17848c4367fe92782c7d';\n\nexport const getTrendingFilms = () => {\n  const queryParams = new URLSearchParams({\n    api_key: API_KEY_V3,\n  });\n  return fetch(`https://api.themoviedb.org/3/trending/all/week?${queryParams}`)\n    .then(res => res.json())\n    .then(res => res.results);\n};\n\nexport const getFilmsById = moveiID => {\n  const queryParams = new URLSearchParams({\n    api_key: API_KEY_V3,\n  });\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${moveiID}?${queryParams}&language=en-US`\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n\n    return Promise.reject(\n      new Error(`We don't have information about this Movie`)\n    );\n  });\n};\n\nexport const getFilmsByQuery = q => {\n  const queryParams = new URLSearchParams({\n    api_key: API_KEY_V3,\n    q,\n  });\n  return fetch(\n    `https://api.themoviedb.org/3/search/movie?${queryParams}&language=en-US&page=1&include_adult=false&query=${q}`\n  )\n    .then(res => res.json())\n    .then(res => res.results);\n};\n\nexport const getCastFilm = moveiID => {\n  const queryParams = new URLSearchParams({\n    api_key: API_KEY_V3,\n  });\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${moveiID}/credits?${queryParams}&language=en-US`\n  )\n    .then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n\n      return Promise.reject(new Error(`We don't have about this Movie`));\n    })\n    .then(res => res.cast);\n};\n\nexport const getReviewFilm = moveiID => {\n  const queryParams = new URLSearchParams({\n    api_key: API_KEY_V3,\n  });\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${moveiID}/reviews?${queryParams}&language=en-US&page=1`\n  )\n    .then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n\n      return Promise.reject(new Error(`We don't have about this Movie`));\n    })\n    .then(res => res.results);\n};\n","import { useEffect, useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport css from '../Home/Home.module.css';\n\nimport * as FilmsAPI from '../../Api/ApiMovie';\n\nconst Home = () => {\n  const [trendingFilms, setTrendingFilms] = useState([]);\n  const location = useLocation();\n\n  useEffect(() => {\n    FilmsAPI.getTrendingFilms().then(setTrendingFilms);\n  }, []);\n\n  return (\n    <>\n      <ul className={css.home_styled_ul}>\n        {trendingFilms.map(trendingFilm => (\n          <li className={css.list_home} key={trendingFilm.id}>\n            <Link\n              className={css.home_link}\n              to={`/movies/${trendingFilm.id}`}\n              state={{ from: location.pathname }}\n            >\n              <img\n                className={css.home_img}\n                width={420}\n                src={`https://image.tmdb.org/t/p/w780${trendingFilm.poster_path}`}\n                alt={trendingFilm.title}\n              />\n              {trendingFilm.title} {trendingFilm.name}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default Home;\n","// extracted by mini-css-extract-plugin\nexport default {\"home_styled_ul\":\"Home_home_styled_ul__zNaTm\",\"list_home\":\"Home_list_home__K041t\",\"home_img\":\"Home_home_img__inaBL\",\"home_link\":\"Home_home_link__CREjD\"};"],"names":["API_KEY_V3","getTrendingFilms","queryParams","URLSearchParams","api_key","fetch","then","res","json","results","getFilmsById","moveiID","response","ok","Promise","reject","Error","getFilmsByQuery","q","getCastFilm","cast","getReviewFilm","useState","trendingFilms","setTrendingFilms","location","useLocation","useEffect","FilmsAPI","className","css","map","trendingFilm","to","id","state","from","pathname","width","src","poster_path","alt","title","name"],"sourceRoot":""}