{"version":3,"file":"static/js/135.576feba2.chunk.js","mappings":"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","sources":["Api/ApiMovie.jsx","webpack://react-homework-template/./src/pages/MovieDetails/MovieDetails.module.css?0c24","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["const API_KEY_V3 = 'e0ed1638ffdd17848c4367fe92782c7d';\n\nexport const getTrendingFilms = () => {\n  const queryParams = new URLSearchParams({\n    api_key: API_KEY_V3,\n  });\n  return fetch(`https://api.themoviedb.org/3/trending/all/week?${queryParams}`)\n    .then(res => res.json())\n    .then(res => res.results);\n};\n\nexport const getFilmsById = moveiID => {\n  const queryParams = new URLSearchParams({\n    api_key: API_KEY_V3,\n  });\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${moveiID}?${queryParams}&language=en-US`\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n\n    return Promise.reject(\n      new Error(`We don't have information about this Movie`)\n    );\n  });\n};\n\nexport const getFilmsByQuery = q => {\n  const queryParams = new URLSearchParams({\n    api_key: API_KEY_V3,\n    q,\n  });\n  return fetch(\n    `https://api.themoviedb.org/3/search/movie?${queryParams}&language=en-US&page=1&include_adult=false&query=${q}`\n  )\n    .then(res => res.json())\n    .then(res => res.results);\n};\n\nexport const getCastFilm = moveiID => {\n  const queryParams = new URLSearchParams({\n    api_key: API_KEY_V3,\n  });\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${moveiID}/credits?${queryParams}&language=en-US`\n  )\n    .then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n\n      return Promise.reject(new Error(`We don't have about this Movie`));\n    })\n    .then(res => res.cast);\n};\n\nexport const getReviewFilm = moveiID => {\n  const queryParams = new URLSearchParams({\n    api_key: API_KEY_V3,\n  });\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${moveiID}/reviews?${queryParams}&language=en-US&page=1`\n  )\n    .then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n\n      return Promise.reject(new Error(`We don't have about this Movie`));\n    })\n    .then(res => res.results);\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"MovieDetails_container__Ys+c9\",\"second_container\":\"MovieDetails_second_container__dQyHj\",\"movie_pic\":\"MovieDetails_movie_pic__qHRf+\",\"title\":\"MovieDetails_title__cUGs9\",\"user_score\":\"MovieDetails_user_score__D3Cud\",\"overview\":\"MovieDetails_overview__U5Vnb\",\"overview_text\":\"MovieDetails_overview_text__OOuMT\",\"genres\":\"MovieDetails_genres__Pnmgt\",\"genres_list\":\"MovieDetails_genres_list__14ciI\",\"genres_padding_list\":\"MovieDetails_genres_padding_list__k8z4A\",\"button\":\"MovieDetails_button__uXZxd\",\"option\":\"MovieDetails_option__4wZyM\",\"link\":\"MovieDetails_link__U+v+7\"};","import { useState, useEffect } from 'react';\nimport { useParams, Outlet, Link, useLocation } from 'react-router-dom';\nimport css from '../MovieDetails/MovieDetails.module.css';\nimport * as FilmsAPI from '../../Api/ApiMovie';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [detailsForFilms, setDetailsForFilms] = useState([]);\n  const location = useLocation();\n  useEffect(() => {\n    FilmsAPI.getFilmsById(movieId).then(setDetailsForFilms);\n  }, [movieId]);\n\n  const backLinkHref = location.state?.from ?? '/movies';\n\n  let genres = detailsForFilms.genres;\n  return (\n    <>\n      <Link className={css.button} to={backLinkHref}>\n        Back\n      </Link>\n      {!detailsForFilms.status ? (\n        <div className={css.container}>\n          We dont have any information about this Movie, try to find another one{' '}\n        </div>\n      ) : (\n        <div className={css.container}>\n          {detailsForFilms.poster_path && (\n            <img\n              className={css.movie_pic}\n              width=\"360\"\n              src={`https://image.tmdb.org/t/p/w780${detailsForFilms.poster_path}`}\n              alt={detailsForFilms.title}\n            />\n          )}\n          <div className={css.second_container}>\n            <b className={css.title}>\n              {detailsForFilms.title} (\n              {Number.parseInt(detailsForFilms.release_date)})\n            </b>\n            <p className={css.user_score}>\n              User Score: {(detailsForFilms.vote_average * 10).toFixed(2)}%\n            </p>\n            <b className={css.overview}>Overview</b>\n            <p className={css.overview_text}>{detailsForFilms.overview}</p>\n            <b className={css.genres}>Genres</b>\n            <ul className={css.genres_list}>\n              {genres &&\n                genres.map(genre => (\n                  <li className={css.genres_padding_list} key={genre.id}>\n                    {genre.name}\n                  </li>\n                ))}\n            </ul>\n          </div>\n        </div>\n      )}\n\n      {detailsForFilms.status && (\n        <div>\n          <ul className={css.option}>\n            <li>\n              <Link\n                className={css.link}\n                to={`/movies/${movieId}/cast`}\n                state={{\n                  from: location.state?.from ?? '/movies',\n                }}\n              >\n                Cast\n              </Link>\n            </li>\n            <li>\n              <Link\n                className={css.link}\n                to={`/movies/${movieId}/reviews`}\n                state={{\n                  from: location.state?.from ?? '/movies',\n                }}\n              >\n                Reviews\n              </Link>\n            </li>\n          </ul>\n          <Outlet />\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["API_KEY_V3","getTrendingFilms","queryParams","URLSearchParams","api_key","fetch","then","res","json","results","getFilmsById","moveiID","response","ok","Promise","reject","Error","getFilmsByQuery","q","getCastFilm","cast","getReviewFilm","movieId","useParams","useState","detailsForFilms","setDetailsForFilms","location","useLocation","useEffect","FilmsAPI","backLinkHref","state","from","genres","className","css","to","status","poster_path","width","src","alt","title","Number","parseInt","release_date","vote_average","toFixed","overview","map","genre","name","id"],"sourceRoot":""}